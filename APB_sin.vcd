$date
	Wed Nov 22 17:04:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module APB_tan_tb $end
$var wire 1 ! PWRITE $end
$var wire 32 " PWDATA [31:0] $end
$var wire 1 # PSEL $end
$var wire 1 $ PREADY $end
$var wire 32 % PRDATA_MASTER [31:0] $end
$var wire 32 & PRDATA [31:0] $end
$var wire 1 ' PENABLE $end
$var wire 32 ( PADDR [31:0] $end
$var reg 32 ) PADDR_MASTER [31:0] $end
$var reg 1 * PCLK $end
$var reg 1 + PRESET $end
$var reg 32 , PWDATA_MASTER [31:0] $end
$var reg 1 - PWRITE_MASTER $end
$scope module APB_master_1 $end
$var wire 32 . PADDR_MASTER [31:0] $end
$var wire 1 * PCLK $end
$var wire 1 + PRESET $end
$var wire 32 / PWDATA_MASTER [31:0] $end
$var wire 1 - PWRITE_MASTER $end
$var wire 1 $ PREADY $end
$var wire 32 0 PRDATA [31:0] $end
$var reg 32 1 PADDR [31:0] $end
$var reg 1 ' PENABLE $end
$var reg 32 2 PRDATA_MASTER [31:0] $end
$var reg 1 # PSEL $end
$var reg 32 3 PWDATA [31:0] $end
$var reg 1 ! PWRITE $end
$scope function apb_read $end
$var reg 32 4 inp_addr [31:0] $end
$upscope $end
$scope function apb_write $end
$var reg 32 5 inp_addr [31:0] $end
$var reg 32 6 inp_data [31:0] $end
$upscope $end
$upscope $end
$scope module APB_tan_1 $end
$var wire 32 7 PADDR [31:0] $end
$var wire 1 * PCLK $end
$var wire 1 ' PENABLE $end
$var wire 1 # PSEL $end
$var wire 32 8 PWDATA [31:0] $end
$var wire 1 ! PWRITE $end
$var parameter 4 9 control_reg_ADDR $end
$var parameter 4 : output_reg_ADDR $end
$var reg 32 ; PRDATA [31:0] $end
$var reg 1 $ PREADY $end
$var reg 32 < control_reg [31:0] $end
$var reg 32 = output_reg [31:0] $end
$upscope $end
$upscope $end
$scope module APB_tan_tb $end
$scope module APB_master_1 $end
$scope function apb_read $end
$upscope $end
$scope function apb_write $end
$upscope $end
$upscope $end
$scope module APB_tan_1 $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 :
b0 9
$end
#0
$dumpvars
b0 =
b0 <
b0 ;
b0 8
b0 7
bx 6
bx 5
bx 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
0-
b0 ,
0+
0*
b0 )
b0 (
0'
b0 &
b0 %
0$
0#
b0 "
0!
$end
#200
1'
1!
1#
b0 6
b0 5
1-
1*
#400
0*
#600
1$
1*
#800
0*
#1000
0$
0'
0#
b1 "
b1 3
b1 8
b1 6
b1 ,
b1 /
1*
#1200
0*
#1400
b1 =
1$
b1 <
1'
1#
1*
#1600
0*
#1800
0$
0'
0#
b10 "
b10 3
b10 8
b10 6
b10 ,
b10 /
1*
#2000
0*
#2200
b1111111111111111111111111111111 =
1$
b10 <
1'
1#
1*
#2400
0*
#2600
0$
0'
0#
b11 "
b11 3
b11 8
b11 6
b11 ,
b11 /
1*
#2800
0*
#3000
b11111111111111111111111111111110 =
1$
b11 <
1'
1#
1*
#3200
0*
#3400
0$
0'
0#
b100 "
b100 3
b100 8
b100 6
b100 ,
b100 /
1*
#3600
0*
#3800
b0 =
1$
b100 <
1'
1#
1*
#4000
0*
#4200
0$
0'
0#
b101 "
b101 3
b101 8
b101 6
b101 ,
b101 /
1*
#4400
0*
#4600
b1 =
1$
b101 <
1'
1#
1*
#4800
0*
#5000
0$
0'
0#
b0 4
0-
1*
#5200
0*
#5400
b101 %
b101 2
1$
b101 &
b101 0
b101 ;
1'
1#
0!
1*
#5600
0*
#5800
0$
0'
0#
b100 4
b100 )
b100 .
1*
#6000
0*
#6200
b1 %
b1 2
1$
b1 &
b1 0
b1 ;
1'
1#
b100 (
b100 1
b100 7
1*
#6400
0*
#6600
0$
0'
0#
1*
#6800
0*
#7000
1$
1'
1#
1*
#7100
